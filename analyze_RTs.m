
function GCM = analyze_RTs(GCM)
% load in subjects who didn't do the same thing for >144 trials
%subjects='AA022,AA071,AA111,AA164,AA343,AA363,AA374,AA631,AA703,AB050,AB434,AB546,AB607,AB830,AB903,AD032,AD108,AE085,AF497,AF661,AG134,AH994,AJ027,AJ537,AJ577,AJ702,AJ826,AJ855,AJ975,AK027,AK028,AK303,AL023,AL233,AL627,AL747,AL752,AL808,AL925,an312,AN582,AO072,AO094,AO226,AO525,AO580,AO631,AO679,AP614,AQ340,AQ633,AQ975,AR607,AS038,AS312,AS588,AS599,AS768,AS988,AT122,AT385,AT511,AT719,AU102,AU478,AU569,AU626,AU739,AU798,AV011,AV134,AV143,AV503,AV551,AV683,AV708,AV718,AV958,AW090,AW199,AW442,AW519,AW577,AW743,aw856,AW910,AW950,AX082,AX394,AX490,AX598,AX666,AX964,AY444,AY480,AY649,AY758,AY762,AY841,AY862,AY995,AZ076,AZ175,AZ233,AZ451,AZ532,AZ608,az689,AZ690,AZ781,az790,AZ810,AZ833,AZ843,AZ873,AZ985,BA003,BA042,BA284,BA504,BA548,BA596,BA693,BA935,BA953,BA977,BB146,BB230,BB278,BB328,BB360,BB382,BB383,BB389,BB432,BB473,BB474,bb477,bb478,BB481,BB483,BB488,BB497,BB498,BB508,BB512,BB527,BB544,BB565,BB567,BB571,BB579,BB601,BB625,BB641,BB662,BB669,BB694,BB706,BB728,BB756,BB809,BB818,bb821,BB822,BB845,BB857,BB867,BB898,BB906,BB916,BB920,BB998,BC006,BC027,BC034,BC059,BC083,BC084,BC100,bc196,BC234,BC242,BC245,BC280,BC301,BC312,BC351,BC352,BC380,BC512,BC514,BC543,BC581,BC615,BC632,BC653,BC678,BC726,BC758,BC762,BC771,BC838,BC854,BC903,BC963,BC998,BD021,BD217,BD234,BD270,BD356,BD440,bd464,BD506,BD512,BD730,BD796,BD961,BE109,BE149,BE264,BE273,BE280,BE283,be286,BE350,BE369,BE376,be387,BE424,BE520,BE596,BE672,BE677,BE758,BF040,BF087,BF145,BF223,BF228,BF332,BG691,BG921,BH048,BH100,BH108,BH114,BH220,BH222,BH241,BH806,bi128,BI206,BI287,bi365,bi380,BI602,BI872,BJ024,BJ123,BJ191,BJ216,BJ523,BK050,BK144,BK211,BK413,BK415,BK516,BK526,BK545,BK578,BK620,BK978,BL502,BL641,BL760,BL953,BL970,BL973,BL974,BM050,BM152,BM183,BM242,BM250,BM320,BM336,BM558,BM678,BM732,BM742,BM770,BN061,BN114,BN250,BN251,BN269,BN280,BN291,BN337,BN460,BN494,BN536,BN579,BN811,BN867,BO240,BO269,BO297,BO344,BO399,BO480,BO642,BO719,BO745,BO762,BO822,BO986,BP181,BP185,BP189,BP222,BP305,BP318,BP539,BP708,BP801,BP814,BP835,BP993,BQ080,BQ106,BQ206,BQ211,BQ274,BQ567,BQ682,BQ730,BQ852,BQ949,BR064,BR185,BR198,BR230,BR511,BR518,BR567,BR582,BR715,BR717,BR780,BR809,BR832,BR910,BR911,BS092,BS162,BS198,BS266,BS286,BS326,BS445,BS548,BS615,BS634,BS675,BS676,BS693,BS796,BS992,BT265,BT288,BT327,BT330,BT475,BT499,BT558,BT583,BT638,BT779,BT792,BT800,BU313,BU445,BU562,BU819,BV027,BV076,BV318,XX124,XX614';

% or load in subjects who both didn't do the same thing for >144 trials and
% had accuracy >55%
% subjects='AA022,AA071,AA343,AA374,AB050,AB434,AB546,AB830,AB903,AD108,AE085,AF661,AG134,AH994,AJ027,AJ537,AJ577,AJ702,AJ826,AJ855,AK027,AK028,AK303,AL233,AL627,AL747,AL752,AL925,AN312,AN382,AN582,AO226,AO580,AO679,AP614,AQ633,AQ975,AR607,AS038,AS116,AS312,AS588,AS768,AS988,AT122,AT719,AT923,AU067,AU102,AU569,AU626,AU739,AU798,AV011,AV134,AV143,AV503,AV551,AV683,AV708,AV828,AV958,AW090,AW199,AW442,AW743,AW856,AW910,AW950,AX082,AX394,AX490,AX598,AX666,AX683,AY480,AY649,AY762,AY826,AY841,AY862,AY995,AZ076,AZ175,AZ233,AZ532,AZ608,AZ689,AZ690,AZ781,AZ790,AZ810,AZ833,AZ843,AZ873,BA003,BA042,BA284,BA504,BA548,BA596,BA693,BA953,BB146,BB223,BB382,BB383,BB389,BB474,BB477,BB478,BB481,BB483,BB497,BB498,BB512,BB527,BB544,BB567,BB571,BB641,BB662,BB669,BB694,BB706,BB728,BB756,BB809,BB818,BB845,BB857,BB867,BB898,BB906,BB916,BB998,BC006,BC027,BC034,BC044,BC058,BC059,BC083,BC084,BC097,BC100,BC181,BC234,BC242,BC301,BC312,BC351,BC352,BC367,BC378,BC380,BC496,BC512,BC514,BC543,BC581,BC615,BC632,BC726,BC762,BC771,BC838,BC854,BC963,BC998,BD021,BD205,BD217,BD270,BD331,BD356,BD409,BD464,BD506,BD730,BD793,BD796,BE109,BE264,BE273,BE280,BE283,BE286,BE376,BE387,BE424,BE520,BE596,BE672,BE677,BE758,BE999,BF040,BF087,BF145,BF228,BF332,BG691,BG921,BH048,BH100,BH108,BH114,BH210,BH222,BH254,BH806,BI206,BI287,BI360,BI365,BI380,BI602,BI872,BJ123,BJ191,BJ523,BK144,BK413,BK415,BK526,BK545,BK578,BK620,BK978,BL502,BL641,BL760,BL953,BL970,BL973,BM050,BM152,BM242,BM250,BM320,BM336,BM558,BM667,BM678,BM732,BM742,BM770,BN061,BN114,BN250,BN251,BN280,BN291,BN337,BN494,BN811,BO240,BO269,BO297,BO344,BO480,BO642,BO719,BO745,BO762,BO822,BP181,BP185,BP222,BP305,BP318,BP708,BP801,BP993,BQ080,BQ106,BQ206,BQ274,BQ852,BQ949,BR064,BR185,BR198,BR230,BR511,BR518,BR715,BR717,BR780,BR809,BR832,BR911,BS092,BS162,BS198,BS445,BS548,BS634,BS675,BS676,BS693,BS796,BS992,BT288,BT327,BT330,BT475,BT583,BT638,BT779,BT792,BT800,BU313,BU445,BU819,BV027,BV318,XX124,XX614';
% subjects = cellstr(strsplit(subjects,","));
% filePath = strcat('L:','/rsmith/lab-members/cgoldman/go_no_go/DDM/processed_behavioral_files_DDM/');
% k = 1;
% DCM = {};
% for i = 1:length(subjects)
%         try
%             GCM{k,1} = DCM;
%             fileName = strcat(subjects(i),"_processed_behavioral_file.csv");
%             fullPath = strcat(filePath,fileName);
%             data = load_gonogo_data(fullPath);
%             data.subject = subjects(i);
%             GCM{k,1}.subject = subjects(i);
%             GCM{k,1}.U = data;
%             fileName = "";
%             k = k+1;
%         catch e
%             disp(['Could not load' fileName]);
%         end
% end
% 
% allReactionTimes = [];
% 
% for k = 1:length(GCM)
%     currentRTs = GCM{k,1}.U.rt;
%     allReactionTimes = [allReactionTimes; currentRTs];
% end

% Plot a histogram of the aggregated reaction times
% figure; % Open a new figure window
% histogram(allReactionTimes);
% title('Histogram of Reaction Times for All Subjects');
% xlabel('Reaction Time');
% ylabel('Frequency');


% Calculate EWMA
lam = .01;
L = 1.5;
sigma=.5;
total_trials_excluded = 0;
for k = 1:length(GCM)
    DCM = GCM{k,1};
    control_state = nan(1,160);
    ucl = nan(1,160);
    control_surpass = nan(1,160);
    keep_trial = ones(1,160);
    surpass_already=0;
    [currentRTs,index] = sort(DCM.U.rt);
    % calculate control state and UCL
    for j=1:sum(~isnan(currentRTs))
        trial_index = index(j);
        choice = DCM.U.c(trial_index);
        trial_type = DCM.U.trial_type(trial_index);
        if (choice ==1 && trial_type ==1) || (choice ==1 && trial_type ==2)
            isCorrect =1;
        else
            isCorrect=0;
        end
        if j==1
            control_state(j) = lam*isCorrect + (1 - lam)*.5;
        else 
            control_state(j) = lam*isCorrect + (1 - lam)*control_state(j-1);
        end
        ucl(j) = .5 + L*sigma*((lam/(2-lam))*(1-(1-lam)^(2*j)))^.5;
        control_surpass(j) = control_state(j) > ucl(j);
        % remove fast RT if not greater than ucl
        if ~control_surpass(j) && ~surpass_already
            keep_trial(trial_index) = 0;
            total_trials_excluded = total_trials_excluded+1;
        else
            surpass_already = 1;
        end        
    end
    GCM{k,1}.trials_ranked_by_RT = index;
    GCM{k,1}.control_state = control_state;
    GCM{k,1}.ucl = ucl;
    GCM{k,1}.U.keep_trial = keep_trial;
    
    
end
    percent_excluded = total_trials_excluded/(length(GCM)*160);
    fprintf('Percent of Trials Excluded for Fast RTs: %.2f\n',percent_excluded)

    %optionally plot
    plot(GCM{1,1}.control_state, 'LineWidth', 2);
    hold on; % This command allows you to plot multiple lines on the same figure.
    plot(GCM{1,1}.ucl, 'LineWidth', 2);
    hold off;
end


